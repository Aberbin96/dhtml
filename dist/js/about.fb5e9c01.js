(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{f820:function(e,a,n){"use strict";n.r(a);var o=function(){var e=this,a=e.$createElement;e._self._c;return e._m(0)},s=[function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("div",{staticClass:"about"},[n("h1",[e._v("DHTML")]),n("p",[e._v("\n    Es un término que se usó a fines de los años 90 y principios de los 2000 para describir cualquier tipo de funcionalidad \n    que de alguna manera fuera del ámbito de la navegación regular de sitios web. En realidad, solo era una palabra de moda \n    difícil de definir, como la Web 2.0.\n  ")]),n("p",[e._v('\n    La definición de HTML dinámico o DHTML, podría ser que es "HTML que puede cambiar incluso después de que una página\n     se haya cargado en un navegador".\n  ')]),n("p",[e._v("\n    las últimas tendencias en el desarrollo de aplicaciones web están más relacionadas con DHTML. En la antiguedad, \n    los diseños div eran nuevos y JavaScript se convirtió casi en una maldición. Era imperativo que el sitio siguiera \n    siendo utilizable sin JavaScript.\n  ")]),n("p",[e._v("\n    Desde entonces, se han producido múltiples oleadas de mejoras en las tecnologías web front-end, como CSS3, HTML5, jQuery.\n     En 2004, Gmail y AJAX introdujeron un nuevo nivel de expectativa para las aplicaciones web a la corriente principal, \n     seguido de Google Maps un año después. Todo esto lleva a las aplicaciones web ricas que tenemos hoy.\n  ")]),n("p",[e._v("\n    Las implementaciones del navegador de HTML y CSS son hoy en día muy buenas y los proveedores de navegadores se \n    enorgullecen de ofrecer la máxima ejecución de JavaScript. Lo que surgió de la era de los estándares web fue la \n    separación de contenido, diseño y lógica con HTML, CSS y JavaScript.\n  ")]),n("p",[e._v("\n    Las tendencias indican la fusion de todo, junto con el paquete de módulos, Webpack React o Vue.js se está utilizando para \n    crear código que se asemeja al código DHTML de 1999 más que el código basado en jQuery de 2009. Los componentes web \n    estándar se están demorando, pero (React o Vue) + Webpack ya le permite trabajar con HTML, JS, CSS y Imágenes todo \n    en el mismo entorno. En DHTML hiciste todo con JavaScript, porque podías, hoy está hecho porque tiene sentido.\n  ")]),n("p",[e._v("\n    Este término inicio a fines de los años 90 y principios de los 2000 para describir cualquier tipo de funcionalidad que de alguna manera fuera ámbito de la navegación regular de sitios web. La definición de DHTML (HTML Dinámico), podría ser que es “HTML que puede cambiar incluso des pues de que una página se haya cargado en un navegador”. En su momento esto era una palabra de moda difícil de definir.\n  ")]),n("p",[e._v("\n    Las últimas tendencias en desarrollo de aplicaciones web están relacionadas con DHTML. En la antigüedad este concepto era muy complejo ya que se buscaba que el sitio siguiera siendo funcional sin JavaScript. En la actualidad se han producido múltiples avances en las tecnologías front-end, como CSS3, HTML5, JQuery, etc.., el primer innovador no esta herramienta fue Google con Gmail..\n  ")]),n("p",[e._v("\n    Se está busca la fusión de todos los elementos de frontend, los desarrollos actuales con React y Vue se asemejan al Código DHTML de 1999, antes hacías todo con JavaScript porque se podía, pero ahora se hace porque tiene sentido.  \n  ")]),n("p",[e._v("\n    Se está perdiendo un poco la estructura de hojas de estilo en cascada que definan todos los aspectos de nuestra aplicación, ahora solo definen el cuerpo de nuestro sitio y los estilos de los componentes se realizan en línea, a su vez se está perdiendo el uso de pseudo selectores como hover y estos efectos se están realizando por JavaScript.\n  ")]),n("h1",[e._v("Regreso al futuro: un desplazador DHTML desde 2001")])])}],i=n("2877"),d={},r=Object(i["a"])(d,o,s,!1,null,null,null);r.options.__file="About.vue";a["default"]=r.exports}}]);
//# sourceMappingURL=about.fb5e9c01.js.map